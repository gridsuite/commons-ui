/**
 * Copyright (c) 2025, RTE (http://www.rte-france.com)
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

/**
 * Base ESLint config initially generated by `eslint-config-airbnb-extended` (v2.3.2)
 * using the React + Prettier + TypeScript template, then manually adapted for Commons-ui.
 * Source template:
 * https://github.com/NishargShah/eslint-config-airbnb-extended/blob/v2.3.2/packages/create-airbnb-x-config/templates/react/prettier/ts/default/eslint.config.mjs
 */

import { configs, plugins } from 'eslint-config-airbnb-extended';
import { rules as prettierConfigRules } from 'eslint-config-prettier';
import prettierPlugin from 'eslint-plugin-prettier';
import js from '@eslint/js';

const jsConfig = [
    // ESLint Recommended Rules
    {
        name: 'js/config',
        ...js.configs.recommended,
    },
    // Stylistic Plugin
    plugins.stylistic,
    // Import X Plugin
    plugins.importX,
    // Airbnb Base Recommended Config
    ...configs.base.recommended,
];

const reactConfig = [
    // React Plugin
    plugins.react,
    // React Hooks Plugin
    plugins.reactHooks,
    // React JSX A11y Plugin
    plugins.reactA11y,
    // Airbnb React Recommended Config
    ...configs.react.recommended,
];

const typescriptConfig = [
    // TypeScript ESLint Plugin
    plugins.typescriptEslint,
    // Airbnb Base TypeScript Config
    ...configs.base.typescript,
    // Airbnb React TypeScript Config
    ...configs.react.typescript,
];

const prettierConfig = [
    // Prettier Plugin
    {
        name: 'prettier/plugin/config',
        plugins: {
            prettier: prettierPlugin,
        },
    },
    // Prettier Config (disable conflicting rules)
    {
        name: 'prettier/config',
        rules: {
            ...prettierConfigRules,
            'prettier/prettier': 'warn',
        },
    },
];

const projectConfig = [
    {
        name: 'project/ignores',
        ignores: ['dist', 'coverage'],
    },
    // Settings
    {
        name: 'project/settings',
        settings: {
            react: {
                version: 'detect',
            },
        },
    },
    // React JSX Runtime (prevents "React must be in scope" errors)
    {
        name: 'project/react-jsx-runtime',
        files: ['**/*.{jsx,tsx}'],
        rules: {
            'react/react-in-jsx-scope': 'off',
            'react/jsx-uses-react': 'off',
        },
    },
    // Custom rules
    {
        name: 'project/rules',
        rules: {
            // Code style
            curly: 'error',
            'no-console': 'off',
            'no-plusplus': ['error', { allowForLoopAfterthoughts: true }],

            // React rules
            'react/jsx-props-no-spreading': 'off',
            'react/require-default-props': 'off',

            // Import rules
            'import-x/prefer-default-export': 'off',
            'import-x/extensions': 'off',
            'import-x/no-unresolved': 'off',
            'import-x/no-useless-path-segments': 'off',
            'import-x/no-extraneous-dependencies': [
                'error',
                {
                    devDependencies: [
                        'test/**',
                        'tests/**',
                        'spec/**',
                        '**/__tests__/**',
                        '**/__mocks__/**',
                        'test.{js,jsx,ts,tsx}',
                        'test-*.{js,jsx,ts,tsx}',
                        '**/*{.,_}{test,spec}.{js,jsx,ts,tsx}',
                        '**/jest.config.ts',
                        '**/jest.setup.ts',
                        '**/prettier.config.js',
                        '**/vite.config.ts',
                        '**/eslint.config.js',
                    ],
                    optionalDependencies: false,
                },
            ],

            // MUI deep imports restriction
            'no-restricted-imports': [
                'warn',
                {
                    patterns: [
                        {
                            group: [
                                '@mui/*/*',
                                '!@mui/material/colors',
                                '!@mui/material/locale',
                                '!@mui/icons-material/*',
                            ],
                            message:
                                'Deep imports from MUI libraries are forbidden. Import only from the library root.',
                        },
                    ],
                },
            ],

            // Disable strict type-aware rules that weren't in old config
            '@typescript-eslint/no-unsafe-enum-comparison': 'off',
            '@typescript-eslint/consistent-type-definitions': 'off',
            '@typescript-eslint/no-inferrable-types': 'off',
            '@typescript-eslint/consistent-indexed-object-style': 'off',
            '@typescript-eslint/no-empty-object-type': 'off',
            '@typescript-eslint/no-unnecessary-template-expression': 'off',
            '@typescript-eslint/no-duplicate-enum-values': 'off',
            '@typescript-eslint/no-wrapper-object-types': 'off',
            '@typescript-eslint/array-type': 'off',
            '@typescript-eslint/no-unnecessary-type-arguments': 'off',
            'arrow-body-style': 'off',
            'no-shadow': 'off',
            'no-unused-expressions': ['error', { allowShortCircuit: true }],
            'prefer-arrow-callback': 'off',
            'no-unused-vars': ['off', { argsIgnorePattern: '^_' }],
            '@typescript-eslint/no-unnecessary-type-assertion': 'off',
            'prefer-object-has-own': 'off',
        },
    },
];

export default [...jsConfig, ...reactConfig, ...typescriptConfig, ...prettierConfig, ...projectConfig];
